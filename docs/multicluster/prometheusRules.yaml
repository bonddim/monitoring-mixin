groups:
    - name: kube-apiserver-availability.rules
      interval: 3m
      rules:
        - record: "code_verb:apiserver_request_total:increase30d"
          expr: |-
            avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
        - record: "code:apiserver_request_total:increase30d"
          expr: |-
            sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
          labels:
            verb: read
        - record: "code:apiserver_request_total:increase30d"
          expr: |-
            sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
          labels:
            verb: write
        - record: "cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h"
          expr: |-
            sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))
        - record: "cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d"
          expr: |-
            sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
        - record: "cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h"
          expr: |-
            sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h{le="+Inf"})
        - record: "cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d"
          expr: |-
            sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{le="+Inf"})
        - record: "code_resource:apiserver_request_total:rate5m"
          expr: |-
            sum by (cluster,code,resource) (rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
        - record: "code_resource:apiserver_request_total:rate5m"
          expr: |-
            sum by (cluster,code,resource) (rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
        - record: "code_verb:apiserver_request_total:increase1h"
          expr: |-
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
        - record: "code_verb:apiserver_request_total:increase1h"
          expr: |-
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
        - record: "code_verb:apiserver_request_total:increase1h"
          expr: |-
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
        - record: "code_verb:apiserver_request_total:increase1h"
          expr: |-
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
    - name: kube-apiserver-burnrate.rules
      rules: []
    - name: kube-apiserver-histogram.rules
      rules:
        - record: "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: read
        - record: "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: write
    - name: k8s.rules.container_cpu_usage_seconds_total
      rules:
        - record: "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate"
          expr: |-
            sum by (cluster, namespace, pod, container) (irate(container_cpu_usage_seconds_total{job="cadvisor", image!=""}[5m])) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""}))
    - name: k8s.rules.container_memory_working_set_bytes
      rules:
        - record: "node_namespace_pod_container:container_memory_working_set_bytes"
          expr: |-
            container_memory_working_set_bytes{job="cadvisor", image!=""} * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""}))
    - name: k8s.rules.container_memory_rss
      rules:
        - record: "node_namespace_pod_container:container_memory_rss"
          expr: |-
            container_memory_rss{job="cadvisor", image!=""} * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""}))
    - name: k8s.rules.container_memory_cache
      rules:
        - record: "node_namespace_pod_container:container_memory_cache"
          expr: |-
            container_memory_cache{job="cadvisor", image!=""} * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""}))
    - name: k8s.rules.container_memory_swap
      rules:
        - record: "node_namespace_pod_container:container_memory_swap"
          expr: |-
            container_memory_swap{job="cadvisor", image!=""} * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""}))
    - name: k8s.rules.container_memory_requests
      rules:
        - record: "cluster:namespace:pod_memory:active:kube_pod_container_resource_requests"
          expr: |-
            kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"} * on (namespace, pod, cluster) group_left() max by (namespace, pod, cluster) ((kube_pod_status_phase{phase=~"Pending|Running"} == 1))
        - record: "namespace_memory:kube_pod_container_resource_requests:sum"
          expr: |-
            sum by (namespace, cluster) (sum by (namespace, pod, cluster) (max by (namespace, pod, container, cluster) (kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (kube_pod_status_phase{phase=~"Pending|Running"} == 1)))
    - name: k8s.rules.container_cpu_requests
      rules:
        - record: "cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests"
          expr: |-
            kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"} * on (namespace, pod, cluster) group_left() max by (namespace, pod, cluster) ((kube_pod_status_phase{phase=~"Pending|Running"} == 1))
        - record: "namespace_cpu:kube_pod_container_resource_requests:sum"
          expr: |-
            sum by (namespace, cluster) (sum by (namespace, pod, cluster) (max by (namespace, pod, container, cluster) (kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (kube_pod_status_phase{phase=~"Pending|Running"} == 1)))
    - name: k8s.rules.container_memory_limits
      rules:
        - record: "cluster:namespace:pod_memory:active:kube_pod_container_resource_limits"
          expr: |-
            kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"} * on (namespace, pod, cluster) group_left() max by (namespace, pod, cluster) ((kube_pod_status_phase{phase=~"Pending|Running"} == 1))
        - record: "namespace_memory:kube_pod_container_resource_limits:sum"
          expr: |-
            sum by (namespace, cluster) (sum by (namespace, pod, cluster) (max by (namespace, pod, container, cluster) (kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (kube_pod_status_phase{phase=~"Pending|Running"} == 1)))
    - name: k8s.rules.container_cpu_limits
      rules:
        - record: "cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits"
          expr: |-
            kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"} * on (namespace, pod, cluster) group_left() max by (namespace, pod, cluster) ((kube_pod_status_phase{phase=~"Pending|Running"} == 1))
        - record: "namespace_cpu:kube_pod_container_resource_limits:sum"
          expr: |-
            sum by (namespace, cluster) (sum by (namespace, pod, cluster) (max by (namespace, pod, container, cluster) (kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (kube_pod_status_phase{phase=~"Pending|Running"} == 1)))
    - name: k8s.rules.pod_owner
      rules:
        - record: "namespace_workload_pod:kube_pod_owner:relabel"
          expr: |-
            max by (cluster, namespace, workload, pod) (label_replace(label_replace(kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"}, "replicaset", "$1", "owner_name", "(.*)") * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (1, max by (replicaset, namespace, owner_name) (kube_replicaset_owner{job="kube-state-metrics"})), "workload", "$1", "owner_name", "(.*)"))
          labels:
            workload_type: deployment
        - record: "namespace_workload_pod:kube_pod_owner:relabel"
          expr: |-
            max by (cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"}, "workload", "$1", "owner_name", "(.*)"))
          labels:
            workload_type: daemonset
        - record: "namespace_workload_pod:kube_pod_owner:relabel"
          expr: |-
            max by (cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"}, "workload", "$1", "owner_name", "(.*)"))
          labels:
            workload_type: statefulset
        - record: "namespace_workload_pod:kube_pod_owner:relabel"
          expr: |-
            max by (cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job="kube-state-metrics", owner_kind="Job"}, "workload", "$1", "owner_name", "(.*)"))
          labels:
            workload_type: job
    - name: kube-scheduler.rules
      rules:
        - record: "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
        - record: "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
        - record: "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
        - record: "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
        - record: "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
        - record: "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
        - record: "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
        - record: "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
        - record: "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
    - name: node.rules
      rules:
        - record: "node_namespace_pod:kube_pod_info:"
          expr: |-
            topk by(cluster, namespace, pod) (1, max by (cluster, node, namespace, pod) (label_replace(kube_pod_info{job="kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")))
        - record: "node:node_num_cpu:sum"
          expr: |-
            count by (cluster, node) (node_cpu_seconds_total{mode="idle",job="node-exporter"} * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, node_namespace_pod:kube_pod_info:))
        - record: ":node_memory_MemAvailable_bytes:sum"
          expr: |-
            sum(node_memory_MemAvailable_bytes{job="node-exporter"} or (node_memory_Buffers_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Slab_bytes{job="node-exporter"})) by (cluster)
        - record: "node:node_cpu_utilization:ratio_rate5m"
          expr: |-
            avg by (cluster, node) (sum without (mode) (rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",job="node-exporter"}[5m])))
        - record: "cluster:node_cpu:ratio_rate5m"
          expr: |-
            avg by (cluster) (node:node_cpu_utilization:ratio_rate5m)
    - name: kubelet.rules
      rules:
        - record: "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet"})
          labels:
            quantile: "0.99"
        - record: "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet"})
          labels:
            quantile: "0.9"
        - record: "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
          expr: |-
            histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet"})
          labels:
            quantile: "0.5"
    - name: windows.node.rules
      rules:
        - record: "node:windows_node:sum"
          expr: |-
            count by (cluster) (windows_system_system_up_time{job="kubernetes-windows-exporter"})
        - record: "node:windows_node_num_cpu:sum"
          expr: |-
            count by (cluster, instance) (sum by (cluster, instance, core) (windows_cpu_time_total{job="kubernetes-windows-exporter"}))
        - record: ":windows_node_cpu_utilisation:avg1m"
          expr: |-
            1 - avg by (cluster) (rate(windows_cpu_time_total{job="kubernetes-windows-exporter",mode="idle"}[1m]))
        - record: "node:windows_node_cpu_utilisation:avg1m"
          expr: |-
            1 - avg by (cluster, instance) (rate(windows_cpu_time_total{job="kubernetes-windows-exporter",mode="idle"}[1m]))
        - record: ":windows_node_memory_utilisation:"
          expr: |-
            1 - sum by (cluster) (windows_memory_available_bytes{job="kubernetes-windows-exporter"}) / sum by (cluster) (windows_os_visible_memory_bytes{job="kubernetes-windows-exporter"})
        - record: ":windows_node_memory_MemFreeCached_bytes:sum"
          expr: |-
            sum by (cluster) (windows_memory_available_bytes{job="kubernetes-windows-exporter"} + windows_memory_cache_bytes{job="kubernetes-windows-exporter"})
        - record: "node:windows_node_memory_totalCached_bytes:sum"
          expr: |-
            (windows_memory_cache_bytes{job="kubernetes-windows-exporter"} + windows_memory_modified_page_list_bytes{job="kubernetes-windows-exporter"} + windows_memory_standby_cache_core_bytes{job="kubernetes-windows-exporter"} + windows_memory_standby_cache_normal_priority_bytes{job="kubernetes-windows-exporter"} + windows_memory_standby_cache_reserve_bytes{job="kubernetes-windows-exporter"})
        - record: ":windows_node_memory_MemTotal_bytes:sum"
          expr: |-
            sum by (cluster) (windows_os_visible_memory_bytes{job="kubernetes-windows-exporter"})
        - record: "node:windows_node_memory_bytes_available:sum"
          expr: |-
            sum by (cluster, instance) ((windows_memory_available_bytes{job="kubernetes-windows-exporter"}))
        - record: "node:windows_node_memory_bytes_total:sum"
          expr: |-
            sum by (cluster, instance) (windows_os_visible_memory_bytes{job="kubernetes-windows-exporter"})
        - record: "node:windows_node_memory_utilisation:ratio"
          expr: |-
            (node:windows_node_memory_bytes_total:sum - node:windows_node_memory_bytes_available:sum) / scalar(sum(node:windows_node_memory_bytes_total:sum))
        - record: "node:windows_node_memory_utilisation:"
          expr: |-
            1 - (node:windows_node_memory_bytes_available:sum / node:windows_node_memory_bytes_total:sum)
        - record: "node:windows_node_memory_swap_io_pages:irate"
          expr: |-
            irate(windows_memory_swap_page_operations_total{job="kubernetes-windows-exporter"}[5m])
        - record: ":windows_node_disk_utilisation:avg_irate"
          expr: |-
            avg by (cluster) (irate(windows_logical_disk_read_seconds_total{job="kubernetes-windows-exporter"}[1m]) + irate(windows_logical_disk_write_seconds_total{job="kubernetes-windows-exporter"}[1m]))
        - record: "node:windows_node_disk_utilisation:avg_irate"
          expr: |-
            avg by (cluster, instance) ((irate(windows_logical_disk_read_seconds_total{job="kubernetes-windows-exporter"}[1m]) + irate(windows_logical_disk_write_seconds_total{job="kubernetes-windows-exporter"}[1m])))
        - record: "node:windows_node_filesystem_usage:"
          expr: |-
            max by (cluster,instance,volume)((windows_logical_disk_size_bytes{job="kubernetes-windows-exporter"} - windows_logical_disk_free_bytes{job="kubernetes-windows-exporter"}) / windows_logical_disk_size_bytes{job="kubernetes-windows-exporter"})
        - record: "node:windows_node_filesystem_avail:"
          expr: |-
            max by (cluster, instance, volume) (windows_logical_disk_free_bytes{job="kubernetes-windows-exporter"} / windows_logical_disk_size_bytes{job="kubernetes-windows-exporter"})
        - record: ":windows_node_net_utilisation:sum_irate"
          expr: |-
            sum by (cluster) (irate(windows_net_bytes_total{job="kubernetes-windows-exporter"}[1m]))
        - record: "node:windows_node_net_utilisation:sum_irate"
          expr: |-
            sum by (cluster, instance) ((irate(windows_net_bytes_total{job="kubernetes-windows-exporter"}[1m])))
        - record: ":windows_node_net_saturation:sum_irate"
          expr: |-
            sum by (cluster) (irate(windows_net_packets_received_discarded_total{job="kubernetes-windows-exporter"}[1m])) + sum by (cluster) (irate(windows_net_packets_outbound_discarded_total{job="kubernetes-windows-exporter"}[1m]))
        - record: "node:windows_node_net_saturation:sum_irate"
          expr: |-
            sum by (cluster, instance) ((irate(windows_net_packets_received_discarded_total{job="kubernetes-windows-exporter"}[1m]) + irate(windows_net_packets_outbound_discarded_total{job="kubernetes-windows-exporter"}[1m])))
    - name: windows.pod.rules
      rules:
        - record: "windows_pod_container_available"
          expr: |-
            windows_container_available{job="kubernetes-windows-exporter", container_id != ""} * on(container_id, cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by(container, container_id, pod, namespace, cluster)
        - record: "windows_container_total_runtime"
          expr: |-
            windows_container_cpu_usage_seconds_total{job="kubernetes-windows-exporter", container_id != ""} * on(container_id, cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by(container, container_id, pod, namespace, cluster)
        - record: "windows_container_memory_usage"
          expr: |-
            windows_container_memory_usage_commit_bytes{job="kubernetes-windows-exporter", container_id != ""} * on(container_id, cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by(container, container_id, pod, namespace, cluster)
        - record: "windows_container_private_working_set_usage"
          expr: |-
            windows_container_memory_usage_private_working_set_bytes{job="kubernetes-windows-exporter", container_id != ""} * on(container_id, cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by(container, container_id, pod, namespace, cluster)
        - record: "windows_container_network_received_bytes_total"
          expr: |-
            windows_container_network_receive_bytes_total{job="kubernetes-windows-exporter", container_id != ""} * on(container_id, cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by(container, container_id, pod, namespace, cluster)
        - record: "windows_container_network_transmitted_bytes_total"
          expr: |-
            windows_container_network_transmit_bytes_total{job="kubernetes-windows-exporter", container_id != ""} * on(container_id, cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by(container, container_id, pod, namespace, cluster)
        - record: "kube_pod_windows_container_resource_memory_request"
          expr: |-
            max by (cluster, namespace, pod, container) (kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}) * on(container,pod,namespace,cluster) (windows_pod_container_available)
        - record: "kube_pod_windows_container_resource_memory_limit"
          expr: |-
            kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"} * on(container,pod,namespace,cluster) (windows_pod_container_available)
        - record: "kube_pod_windows_container_resource_cpu_cores_request"
          expr: |-
            max by (cluster, namespace, pod, container) (kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}) * on(container,pod,namespace,cluster) (windows_pod_container_available)
        - record: "kube_pod_windows_container_resource_cpu_cores_limit"
          expr: |-
            kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"} * on(container,pod,namespace,cluster) (windows_pod_container_available)
        - record: "namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate"
          expr: |-
            sum by (cluster, namespace, pod, container) (rate(windows_container_total_runtime{}[5m]))

