name: Update

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

permissions:
  contents: write
  pull-requests: write

jobs:
  auto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Render mixins
        run: make update

      - name: Check for changed mixins
        id: status
        run: |
          if [[ $(git status --short docs | wc -l) -ne 0 ]]; then
            version=$(jq -r '.dependencies[] | select(.source.git.remote | contains("kubernetes-mixin")) | .version' jsonnetfile.lock.json)
            repo=$(jq -r '.dependencies[] | select(.source.git.remote | contains("kubernetes-mixin")) | .source.git.remote | sub(".git$"; "")' jsonnetfile.lock.json)
            echo "version=$version" | tee -a "$GITHUB_OUTPUT"
            echo "version-short=${version:0:7}" | tee -a "$GITHUB_OUTPUT"
            echo "version-uri=${repo}/commit/${version}" | tee -a "$GITHUB_OUTPUT"
          fi

      - uses: actions/create-github-app-token@v2
        id: app-token
        if: ${{ steps.status.outputs.version != '' }}
        with:
          app-id: ${{ secrets.app_id  }}
          private-key: ${{ secrets.app_private_key }}

      - uses: peter-evans/create-pull-request@v7
        if: ${{ steps.status.outputs.version != '' }}
        id: cpr
        with:
          token: ${{ steps.app-token.outputs.token }}
          title: Update mixins to ${{ steps.status.outputs.version-short }}
          commit-message: Update mixins to ${{ steps.status.outputs.version }}
          sign-commits: true
          labels: "auto-update"
          branch: mixins-auto-update
          body: >
            Auto-generated mixins update
            to version [${{ steps.status.outputs.version-short }}](${{ steps.status.outputs.version-uri }})

      - name: Set automerge
        if: ${{ steps.cpr.outputs.pull-request-operation == 'created' }}
        run: gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --auto --delete-branch --squash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Auto approve
        continue-on-error: true
        if: ${{ steps.cpr.outputs.pull-request-operation == 'created' }}
        run: gh pr review --approve "${{ steps.cpr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
